{
    "swagger": "2.0",
    "info": {
        "description": "API request bodies and responses are usually JSON-encoded, except for binary data and some of the OAuth2 endpoints. Note that the `Content-Type` header must be set to `application/json` for this, as the request may otherwise fail with error 400.\nWhen clients have a valid access token, e.g. obtained through the `POST /api/v1/session` or `POST /api/v1/oauth/token` endpoint, they can use a standard Bearer Authorization header to authenticate their requests. Submitting the access token with a custom `X-Auth-Token` header is supported as well.",
        "title": "PhotoPrism API",
        "contact": {},
        "version": "v1"
    },
    "host": "demo.photoprism.app",
    "paths": {
        "/api/v1/albums": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Albums"
                ],
                "summary": "finds albums and returns them as JSON",
                "operationId": "SearchAlbums",
                "parameters": [
                    {
                        "maximum": 100000,
                        "minimum": 1,
                        "type": "integer",
                        "description": "maximum number of results",
                        "name": "count",
                        "in": "query",
                        "required": true
                    },
                    {
                        "maximum": 100000,
                        "minimum": 0,
                        "type": "integer",
                        "description": "search result offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "favorites",
                            "name",
                            "title",
                            "added",
                            "edited"
                        ],
                        "type": "string",
                        "description": "sort order",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search query",
                        "name": "q",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/search.Album"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Albums"
                ],
                "summary": "creates a new album",
                "operationId": "CreateAlbum",
                "parameters": [
                    {
                        "description": "properties of the album to be created (currently supports Title and Favorite)",
                        "name": "album",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/form.Album"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Album"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/albums/{uid}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Albums"
                ],
                "summary": "returns album details as JSON",
                "operationId": "GetAlbum",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Album UID",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Album"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    }
                }
            },
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Albums"
                ],
                "summary": "updates album metadata like title and description",
                "operationId": "UpdateAlbum",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Album UID",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "properties to be updated",
                        "name": "album",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/form.Album"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Album"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Albums"
                ],
                "summary": "deletes an existing album",
                "operationId": "DeleteAlbum",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Album UID",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/albums/{uid}/clone": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Albums"
                ],
                "summary": "creates a new album containing pictures from other albums",
                "operationId": "CloneAlbums",
                "parameters": [
                    {
                        "description": "Album Selection",
                        "name": "albums",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/form.Selection"
                        }
                    },
                    {
                        "type": "string",
                        "description": "UID of the album to which the pictures are to be added",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/albums/{uid}/dl": {
            "get": {
                "produces": [
                    "application/zip"
                ],
                "tags": [
                    "Images",
                    "Albums"
                ],
                "summary": "streams the album contents as zip archiv",
                "operationId": "DownloadAlbum",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Album UID",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/albums/{uid}/like": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Albums"
                ],
                "summary": "sets the favorite flag for an album",
                "operationId": "LikeAlbum",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Album UID",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Albums"
                ],
                "summary": "removes the favorite flag from an album",
                "operationId": "DislikeAlbum",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Album UID",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/albums/{uid}/links": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Links",
                    "Albums"
                ],
                "summary": "returns all share links for the given UID as JSON",
                "operationId": "GetAlbumLinks",
                "parameters": [
                    {
                        "type": "string",
                        "description": "album uid",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Link"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Links",
                    "Albums"
                ],
                "summary": "adds a new album share link and return it as JSON",
                "operationId": "CreateAlbumLink",
                "parameters": [
                    {
                        "type": "string",
                        "description": "album uid",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "link properties (currently supported: slug, expires)",
                        "name": "link",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/form.Link"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Link"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/albums/{uid}/links/{linkuid}": {
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Links",
                    "Albums"
                ],
                "summary": "updates an album share link and return it as JSON",
                "operationId": "UpdateAlbumLink",
                "parameters": [
                    {
                        "type": "string",
                        "description": "album uid",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "link uid",
                        "name": "linkuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "properties to be updated (currently supported: slug, expires, token)",
                        "name": "link",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/form.Link"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Link"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Links",
                    "Albums"
                ],
                "summary": "deletes an album share link",
                "operationId": "DeleteAlbumLink",
                "parameters": [
                    {
                        "type": "string",
                        "description": "album",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "link uid",
                        "name": "linkuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Link"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/albums/{uid}/photos": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Albums"
                ],
                "summary": "adds photos to an album",
                "operationId": "AddPhotosToAlbum",
                "parameters": [
                    {
                        "description": "Photo Selection",
                        "name": "photos",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/form.Selection"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Album UID",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Albums"
                ],
                "summary": "removes photos from an album",
                "operationId": "RemovePhotosFromAlbum",
                "parameters": [
                    {
                        "description": "Photo Selection",
                        "name": "photos",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/form.Selection"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Album UID",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/albums/{uid}/t/{token}/{size}": {
            "get": {
                "produces": [
                    "image/jpeg",
                    "image/svg+xml"
                ],
                "tags": [
                    "Images",
                    "Albums"
                ],
                "summary": "returns an album cover image",
                "operationId": "AlbumCover",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Album UID",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "user-specific security token provided with session or 'public' when running PhotoPrism in public mode",
                        "name": "token",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "tile_50",
                            "tile_100",
                            "left_224",
                            "right_224",
                            "tile_224",
                            "tile_500",
                            "fit_720",
                            "tile_1080",
                            "fit_1280",
                            "fit_1600",
                            "fit_1920",
                            "fit_2048",
                            "fit_2560",
                            "fit_3840",
                            "fit_4096",
                            "fit_7680"
                        ],
                        "type": "string",
                        "description": "thumbnail size",
                        "name": "size",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "file"
                        }
                    }
                }
            }
        },
        "/api/v1/batch/albums/delete": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Albums"
                ],
                "summary": "permanently removes multiple albums",
                "operationId": "BatchAlbumsDelete",
                "parameters": [
                    {
                        "description": "Album Selection",
                        "name": "albums",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/form.Selection"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/batch/labels/delete": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Labels"
                ],
                "summary": "deletes multiple labels",
                "operationId": "BatchLabelsDelete",
                "parameters": [
                    {
                        "description": "Label Selection",
                        "name": "labels",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/form.Selection"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/batch/photos/approve": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Photos"
                ],
                "summary": "approves multiple photos that are currently under review",
                "operationId": "BatchPhotosApprove",
                "parameters": [
                    {
                        "description": "Photo Selection",
                        "name": "photos",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/form.Selection"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/batch/photos/archive": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Photos"
                ],
                "summary": "moves multiple photos to the archive",
                "operationId": "BatchPhotosArchive",
                "parameters": [
                    {
                        "description": "Photo Selection",
                        "name": "photos",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/form.Selection"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/batch/photos/delete": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Photos"
                ],
                "summary": "permanently removes multiple or all photos from the archive",
                "operationId": "BatchPhotosDelete",
                "parameters": [
                    {
                        "description": "All or Photo Selection",
                        "name": "photos",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/form.Selection"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/batch/photos/private": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Photos"
                ],
                "summary": "toggles private state of multiple photos",
                "operationId": "BatchPhotosPrivate",
                "parameters": [
                    {
                        "description": "Photo Selection",
                        "name": "photos",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/form.Selection"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/batch/photos/restore": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Photos"
                ],
                "summary": "restores multiple photos from the archive",
                "operationId": "BatchPhotosRestore",
                "parameters": [
                    {
                        "description": "Photo Selection",
                        "name": "photos",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/form.Selection"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/config": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Config"
                ],
                "summary": "returns the client configuration values as JSON",
                "operationId": "GetClientConfig",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/config.ClientConfig"
                        }
                    }
                }
            }
        },
        "/api/v1/config/options": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Settings"
                ],
                "summary": "returns backend config options",
                "operationId": "GetConfigOptions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/config.Options"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Settings"
                ],
                "summary": "updates backend config options",
                "operationId": "SaveConfigOptions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/config.Options"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/dl/{hash}": {
            "get": {
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "Images",
                    "Files"
                ],
                "summary": "returns the raw file data",
                "operationId": "GetDownload",
                "parameters": [
                    {
                        "type": "string",
                        "description": "File Hash",
                        "name": "hash",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "file"
                        }
                    }
                }
            }
        },
        "/api/v1/errors": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Errors"
                ],
                "summary": "searches the error logs and returns the results as JSON",
                "operationId": "GetErrors",
                "parameters": [
                    {
                        "maximum": 100000,
                        "minimum": 1,
                        "type": "integer",
                        "description": "maximum number of results",
                        "name": "count",
                        "in": "query",
                        "required": true
                    },
                    {
                        "maximum": 100000,
                        "minimum": 0,
                        "type": "integer",
                        "description": "search result offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search query",
                        "name": "q",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Error"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Errors"
                ],
                "summary": "removes all entries from the error logs",
                "operationId": "DeleteErrors",
                "responses": {
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/faces": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Faces"
                ],
                "summary": "finds and returns faces as JSON",
                "operationId": "SearchFaces",
                "parameters": [
                    {
                        "maximum": 100000,
                        "minimum": 1,
                        "type": "integer",
                        "description": "maximum number of results",
                        "name": "count",
                        "in": "query",
                        "required": true
                    },
                    {
                        "maximum": 100000,
                        "minimum": 0,
                        "type": "integer",
                        "description": "search result offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "subject",
                            "added",
                            "samples"
                        ],
                        "type": "string",
                        "description": "sort order",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "yes",
                            "no"
                        ],
                        "type": "string",
                        "description": "show hidden",
                        "name": "hidden",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "yes",
                            "no"
                        ],
                        "type": "string",
                        "description": "show unknown",
                        "name": "unknown",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/search.Face"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/faces/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Faces"
                ],
                "summary": "returns a face as JSON",
                "operationId": "GetFace",
                "parameters": [
                    {
                        "type": "string",
                        "description": "face id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Face"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    }
                }
            },
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Faces"
                ],
                "summary": "updates face properties",
                "operationId": "UpdateFace",
                "parameters": [
                    {
                        "type": "string",
                        "description": "face id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "properties to be updated",
                        "name": "face",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/form.Face"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Face"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/files/{hash}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Files"
                ],
                "summary": "returns file details as JSON",
                "operationId": "GetFile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "hash (string) SHA-1 hash of the file",
                        "name": "hash",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.File"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/folders/t/{uid}/{token}/{size}": {
            "get": {
                "produces": [
                    "image/jpeg",
                    "image/svg+xml"
                ],
                "tags": [
                    "Images",
                    "Folders"
                ],
                "summary": "returns a folder cover image",
                "operationId": "FolderCover",
                "parameters": [
                    {
                        "type": "string",
                        "description": "folder uid",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "user-specific security token provided with session or 'public' when running PhotoPrism in public mode",
                        "name": "token",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "tile_50",
                            "tile_100",
                            "left_224",
                            "right_224",
                            "tile_224",
                            "tile_500",
                            "fit_720",
                            "tile_1080",
                            "fit_1280",
                            "fit_1600",
                            "fit_1920",
                            "fit_2048",
                            "fit_2560",
                            "fit_3840",
                            "fit_4096",
                            "fit_7680"
                        ],
                        "type": "string",
                        "description": "thumbnail size",
                        "name": "size",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "file"
                        }
                    }
                }
            }
        },
        "/api/v1/geo": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Photos"
                ],
                "summary": "finds photos and returns results as JSON, so they can be displayed on a map or in a viewer",
                "operationId": "SearchGeo",
                "parameters": [
                    {
                        "maximum": 100000,
                        "minimum": 1,
                        "type": "integer",
                        "description": "maximum number of files",
                        "name": "count",
                        "in": "query",
                        "required": true
                    },
                    {
                        "maximum": 100000,
                        "minimum": 0,
                        "type": "integer",
                        "description": "file offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "excludes private pictures",
                        "name": "public",
                        "in": "query"
                    },
                    {
                        "enum": [
                            0,
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7
                        ],
                        "type": "integer",
                        "description": "minimum quality score (1-7)",
                        "name": "quality",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "search query",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "album uid",
                        "name": "s",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "photo path",
                        "name": "path",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "is type video",
                        "name": "video",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/search.GeoResult"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/import/{path}": {
            "post": {
                "tags": [
                    "Library"
                ],
                "responses": {}
            }
        },
        "/api/v1/index": {
            "post": {
                "tags": [
                    "Library"
                ],
                "responses": {}
            }
        },
        "/api/v1/labels": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Labels"
                ],
                "summary": "finds and returns labels as JSON",
                "operationId": "SearchLabels",
                "parameters": [
                    {
                        "maximum": 100000,
                        "minimum": 1,
                        "type": "integer",
                        "description": "maximum number of results",
                        "name": "count",
                        "in": "query",
                        "required": true
                    },
                    {
                        "maximum": 100000,
                        "minimum": 0,
                        "type": "integer",
                        "description": "search result offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "show all",
                        "name": "all",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search query",
                        "name": "q",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/search.Label"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/labels/{uid}": {
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Labels"
                ],
                "summary": "updates label name",
                "operationId": "UpdateLabel",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Label UID",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Label Name",
                        "name": "label",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/form.Label"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Label"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/labels/{uid}/like": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Labels"
                ],
                "summary": "sets favorite flag for a label",
                "operationId": "LikeLabel",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Label UID",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Labels"
                ],
                "summary": "removes favorite flag from a label",
                "operationId": "DislikeLabel",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Label UID",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/labels/{uid}/t/{token}/{size}": {
            "get": {
                "produces": [
                    "image/jpeg",
                    "image/svg+xml"
                ],
                "tags": [
                    "Images",
                    "Labels"
                ],
                "summary": "returns a label cover image",
                "operationId": "LabelCover",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Label UID",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "user-specific security token provided with session or 'public' when running PhotoPrism in public mode",
                        "name": "token",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "tile_50",
                            "tile_100",
                            "left_224",
                            "right_224",
                            "tile_224",
                            "tile_500",
                            "fit_720",
                            "tile_1080",
                            "fit_1280",
                            "fit_1600",
                            "fit_1920",
                            "fit_2048",
                            "fit_2560",
                            "fit_3840",
                            "fit_4096",
                            "fit_7680"
                        ],
                        "type": "string",
                        "description": "thumbnail size",
                        "name": "size",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "file"
                        }
                    }
                }
            }
        },
        "/api/v1/markers": {
            "post": {
                "tags": [
                    "Files"
                ],
                "responses": {}
            }
        },
        "/api/v1/moments/time": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Albums"
                ],
                "summary": "returns monthly albums as JSON",
                "operationId": "GetMomentsTime",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Album"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/oauth/revoke": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "responses": {}
            }
        },
        "/api/v1/oauth/token": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "responses": {}
            }
        },
        "/api/v1/photos": {
            "get": {
                "description": "Fore more information see:\n- https://docs.photoprism.app/developer-guide/api/search/#get-apiv1photos",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Photos"
                ],
                "summary": "finds pictures and returns them as JSON",
                "operationId": "SearchPhotos",
                "parameters": [
                    {
                        "maximum": 100000,
                        "minimum": 1,
                        "type": "integer",
                        "description": "maximum number of files",
                        "name": "count",
                        "in": "query",
                        "required": true
                    },
                    {
                        "maximum": 100000,
                        "minimum": 0,
                        "type": "integer",
                        "description": "file offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "favorites",
                            "name",
                            "title",
                            "added",
                            "edited"
                        ],
                        "type": "string",
                        "description": "sort order",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "groups consecutive files that belong to the same photo",
                        "name": "merged",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "excludes private pictures",
                        "name": "public",
                        "in": "query"
                    },
                    {
                        "enum": [
                            0,
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7
                        ],
                        "type": "integer",
                        "description": "minimum quality score (1-7)",
                        "name": "quality",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "search query",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "album uid",
                        "name": "s",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "photo path",
                        "name": "path",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "is type video",
                        "name": "video",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/search.Photo"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/photos/{uid}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Photos"
                ],
                "summary": "returns picture details as JSON",
                "operationId": "GetPhoto",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Photo UID",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Photo"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    }
                }
            },
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Photos"
                ],
                "summary": "updates picture details and returns them as JSON",
                "operationId": "UpdatePhoto",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Photo UID",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "properties to be updated (only submit values that should be changed)",
                        "name": "photo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/form.Photo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Photo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/photos/{uid}/approve": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Photos"
                ],
                "summary": "marks a photo in review as approved",
                "operationId": "ApprovePhoto",
                "parameters": [
                    {
                        "type": "string",
                        "description": "photo uid",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/photos/{uid}/dl": {
            "get": {
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "Images",
                    "Files"
                ],
                "summary": "returns the primary file matching that belongs to the photo",
                "operationId": "GetPhotoDownload",
                "parameters": [
                    {
                        "type": "string",
                        "description": "photo uid",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "file"
                        }
                    }
                }
            }
        },
        "/api/v1/photos/{uid}/files/{fileuid}": {
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Files"
                ],
                "summary": "removes a file from storage",
                "operationId": "DeleteFile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "photo uid",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "file uid",
                        "name": "fileuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Photo"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/photos/{uid}/files/{fileuid}/orientation": {
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Files"
                ],
                "summary": "changes the orientation of a file",
                "operationId": "ChangeFileOrientation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "photo uid",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "file uid",
                        "name": "fileuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "file orientation",
                        "name": "file",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/form.File"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Photo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/photos/{uid}/files/{fileuid}/primary": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Photos",
                    "Stacks"
                ],
                "summary": "sets the primary file for a photo",
                "operationId": "PhotoPrimary",
                "parameters": [
                    {
                        "type": "string",
                        "description": "photo uid",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "file uid",
                        "name": "fileuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Photo"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/photos/{uid}/files/{fileuid}/unstack": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Photos",
                    "Stacks"
                ],
                "summary": "removes a file from an existing photo stack",
                "operationId": "PhotoUnstack",
                "parameters": [
                    {
                        "type": "string",
                        "description": "photo uid",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "file uid",
                        "name": "fileuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Photo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/photos/{uid}/label": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Labels",
                    "Photos"
                ],
                "summary": "adds a label to a photo",
                "operationId": "AddPhotoLabel",
                "parameters": [
                    {
                        "description": "label properties",
                        "name": "label",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/form.Label"
                        }
                    },
                    {
                        "type": "string",
                        "description": "photo uid",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Photo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/photos/{uid}/label/{id}": {
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Labels",
                    "Photos"
                ],
                "summary": "changes a photo label",
                "operationId": "UpdatePhotoLabel",
                "parameters": [
                    {
                        "type": "string",
                        "description": "photo uid",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "label id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "properties to be updated (currently supports: uncertainty)",
                        "name": "label",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/form.Label"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Photo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Labels",
                    "Photos"
                ],
                "summary": "removes a label from a photo",
                "operationId": "RemovePhotoLabel",
                "parameters": [
                    {
                        "type": "string",
                        "description": "photo uid",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "label id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Photo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/photos/{uid}/like": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Photos"
                ],
                "summary": "flags a photo as favorite",
                "operationId": "LikePhoto",
                "parameters": [
                    {
                        "type": "string",
                        "description": "photo uid",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Photos"
                ],
                "summary": "removes the favorite flags from a photo",
                "operationId": "DislikePhoto",
                "parameters": [
                    {
                        "type": "string",
                        "description": "photo uid",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/photos/{uid}/yaml": {
            "get": {
                "produces": [
                    "text/x-yaml"
                ],
                "tags": [
                    "Photos"
                ],
                "summary": "returns picture details as YAML",
                "operationId": "GetPhotoYaml",
                "parameters": [
                    {
                        "type": "string",
                        "description": "photo uid",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/services": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Services"
                ],
                "summary": "finds account settings and returns them as JSON",
                "operationId": "SearchServices",
                "parameters": [
                    {
                        "maximum": 100000,
                        "minimum": 1,
                        "type": "integer",
                        "description": "maximum number of results",
                        "name": "count",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.Service"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Services"
                ],
                "summary": "creates a new remote account configuration",
                "operationId": "AddService",
                "parameters": [
                    {
                        "description": "properties of the service to be created",
                        "name": "service",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/form.Service"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Service"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/services/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Services"
                ],
                "summary": "returns an account as JSON",
                "operationId": "GetService",
                "parameters": [
                    {
                        "type": "string",
                        "description": "service id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Service"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    }
                }
            },
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Services"
                ],
                "summary": "updates a remote account configuration",
                "operationId": "UpdateService",
                "parameters": [
                    {
                        "type": "string",
                        "description": "service id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "properties to be updated (only submit values that should be changed)",
                        "name": "service",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/form.Service"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Service"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Services"
                ],
                "summary": "removes a remote account configuration",
                "operationId": "DeleteService",
                "parameters": [
                    {
                        "type": "string",
                        "description": "service id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/services/{id}/folders": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Services"
                ],
                "summary": "returns folders that belong to an account as JSON",
                "operationId": "GetServiceFolders",
                "parameters": [
                    {
                        "type": "string",
                        "description": "service id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/session": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "responses": {}
            }
        },
        "/api/v1/sessions": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "responses": {}
            }
        },
        "/api/v1/settings": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Settings"
                ],
                "summary": "returns the user app settings as JSON",
                "operationId": "GetSettings",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/customize.Settings"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Settings"
                ],
                "summary": "saves the user app settings",
                "operationId": "SaveSettings",
                "parameters": [
                    {
                        "description": "user settings",
                        "name": "settings",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/customize.Settings"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/customize.Settings"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/status": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Server"
                ],
                "summary": "reports if the server is operational",
                "operationId": "GetStatus",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/api/v1/subjects": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Subjects"
                ],
                "summary": "finds and returns subjects as JSON",
                "operationId": "SearchSubjects",
                "parameters": [
                    {
                        "maximum": 100000,
                        "minimum": 1,
                        "type": "integer",
                        "description": "maximum number of results",
                        "name": "count",
                        "in": "query",
                        "required": true
                    },
                    {
                        "maximum": 100000,
                        "minimum": 0,
                        "type": "integer",
                        "description": "search result offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "name",
                            "count",
                            "added",
                            "relevance"
                        ],
                        "type": "string",
                        "description": "sort order",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "yes",
                            "no"
                        ],
                        "type": "string",
                        "description": "show hidden",
                        "name": "hidden",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "minimum number of files",
                        "name": "files",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search query",
                        "name": "q",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/search.Subject"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/subjects/{uid}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Subjects"
                ],
                "summary": "returns a subject as JSON",
                "operationId": "GetSubject",
                "parameters": [
                    {
                        "type": "string",
                        "description": "subject uid",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Subject"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    }
                }
            },
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Subjects"
                ],
                "summary": "updates subject properties",
                "operationId": "UpdateSubject",
                "parameters": [
                    {
                        "type": "string",
                        "description": "subject uid",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "properties to be updated (only submit values that should be changed)",
                        "name": "subject",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/form.Subject"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Subject"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/subjects/{uid}/like": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Subjects"
                ],
                "summary": "flags a subject as favorite",
                "operationId": "LikeSubject",
                "parameters": [
                    {
                        "type": "string",
                        "description": "subject uid",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Subjects"
                ],
                "summary": "removes the favorite flag from a subject",
                "operationId": "DislikeSubject",
                "parameters": [
                    {
                        "type": "string",
                        "description": "subject uid",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/t/{thumb}/{token}/{size}": {
            "get": {
                "description": "Fore more information see:\n- https://docs.photoprism.app/developer-guide/api/thumbnails/#image-endpoint-uri",
                "produces": [
                    "image/jpeg"
                ],
                "tags": [
                    "Images",
                    "Files"
                ],
                "summary": "returns a thumbnail image with the requested size",
                "operationId": "GetThumb",
                "parameters": [
                    {
                        "type": "string",
                        "description": "SHA1 file hash, optionally with a crop area suffixed, e.g. '-016014058037'",
                        "name": "thumb",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "user-specific security token provided with session or 'public' when running PhotoPrism in public mode",
                        "name": "token",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "tile_50",
                            "tile_100",
                            "left_224",
                            "right_224",
                            "tile_224",
                            "tile_500",
                            "fit_720",
                            "tile_1080",
                            "fit_1280",
                            "fit_1600",
                            "fit_1920",
                            "fit_2048",
                            "fit_2560",
                            "fit_3840",
                            "fit_4096",
                            "fit_7680"
                        ],
                        "type": "string",
                        "description": "thumbnail size",
                        "name": "size",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "file"
                        }
                    }
                }
            }
        },
        "/api/v1/users/{uid}": {
            "put": {
                "tags": [
                    "Users"
                ],
                "responses": {}
            }
        },
        "/api/v1/users/{uid}/avatar": {
            "post": {
                "tags": [
                    "Users"
                ],
                "responses": {}
            }
        },
        "/api/v1/users/{uid}/passcode": {
            "post": {
                "tags": [
                    "Users"
                ],
                "responses": {}
            }
        },
        "/api/v1/users/{uid}/passcode/activate": {
            "post": {
                "tags": [
                    "Users"
                ],
                "responses": {}
            }
        },
        "/api/v1/users/{uid}/passcode/confirm": {
            "post": {
                "tags": [
                    "Users"
                ],
                "responses": {}
            }
        },
        "/api/v1/users/{uid}/passcode/deactivate": {
            "post": {
                "tags": [
                    "Users"
                ],
                "responses": {}
            }
        },
        "/api/v1/users/{uid}/password": {
            "put": {
                "tags": [
                    "Users",
                    "Authentication"
                ],
                "responses": {}
            }
        },
        "/api/v1/users/{uid}/sessions": {
            "get": {
                "tags": [
                    "Users",
                    "Authentication"
                ],
                "responses": {}
            }
        },
        "/api/v1/videos/{hash}/{token}/{format}": {
            "get": {
                "description": "Fore more information see:\n- https://docs.photoprism.app/developer-guide/api/thumbnails/#video-endpoint-uri",
                "produces": [
                    "video/mp4"
                ],
                "tags": [
                    "Files",
                    "Videos"
                ],
                "summary": "returns a video, optionally limited to a byte range for streaming",
                "operationId": "GetVideo",
                "parameters": [
                    {
                        "type": "string",
                        "description": "SHA1 video file hash",
                        "name": "thumb",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "user-specific security token provided with session",
                        "name": "token",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "video format, e.g. mp4",
                        "name": "format",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/i18n.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/zip": {
            "post": {
                "tags": [
                    "Download"
                ],
                "responses": {}
            }
        },
        "/api/v1/{entity}/{uid}/links": {
            "post": {
                "tags": [
                    "Links"
                ],
                "responses": {}
            }
        },
        "/users/{uid}/upload/{token}": {
            "post": {
                "tags": [
                    "Users",
                    "Files"
                ],
                "responses": {}
            }
        }
    },
    "definitions": {
        "acl.Grant": {
            "type": "object",
            "additionalProperties": {
                "type": "boolean"
            }
        },
        "acl.Grants": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/definitions/acl.Grant"
            }
        },
        "big.Int": {
            "type": "object"
        },
        "config.CategoryLabel": {
            "type": "object",
            "properties": {
                "Name": {
                    "type": "string"
                },
                "Slug": {
                    "type": "string"
                },
                "UID": {
                    "type": "string"
                }
            }
        },
        "config.ClientConfig": {
            "type": "object",
            "properties": {
                "about": {
                    "type": "string"
                },
                "acl": {
                    "$ref": "#/definitions/acl.Grants"
                },
                "albumCategories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "albums": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Album"
                    }
                },
                "apiUri": {
                    "type": "string"
                },
                "appColor": {
                    "type": "string"
                },
                "appIcon": {
                    "type": "string"
                },
                "appMode": {
                    "type": "string"
                },
                "appName": {
                    "type": "string"
                },
                "authMode": {
                    "type": "string"
                },
                "baseUri": {
                    "type": "string"
                },
                "cameras": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Camera"
                    }
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/config.CategoryLabel"
                    }
                },
                "clip": {
                    "type": "integer"
                },
                "colors": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                },
                "contentUri": {
                    "type": "string"
                },
                "copyright": {
                    "type": "string"
                },
                "count": {
                    "$ref": "#/definitions/config.ClientCounts"
                },
                "countries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Country"
                    }
                },
                "cssUri": {
                    "type": "string"
                },
                "customer": {
                    "type": "string"
                },
                "debug": {
                    "type": "boolean"
                },
                "demo": {
                    "type": "boolean"
                },
                "disable": {
                    "$ref": "#/definitions/config.ClientDisable"
                },
                "downloadToken": {
                    "type": "string"
                },
                "edition": {
                    "type": "string"
                },
                "experimental": {
                    "type": "boolean"
                },
                "ext": {
                    "$ref": "#/definitions/config.Map"
                },
                "flags": {
                    "type": "string"
                },
                "jsUri": {
                    "type": "string"
                },
                "legalInfo": {
                    "type": "string"
                },
                "legalUrl": {
                    "type": "string"
                },
                "lenses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Lens"
                    }
                },
                "loginUri": {
                    "type": "string"
                },
                "manifestUri": {
                    "type": "string"
                },
                "mapKey": {
                    "type": "string"
                },
                "membership": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "passwordLength": {
                    "type": "integer"
                },
                "passwordResetUri": {
                    "type": "string"
                },
                "people": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Person"
                    }
                },
                "pos": {
                    "$ref": "#/definitions/config.ClientPosition"
                },
                "previewToken": {
                    "type": "string"
                },
                "public": {
                    "type": "boolean"
                },
                "readonly": {
                    "type": "boolean"
                },
                "registerUri": {
                    "type": "string"
                },
                "restart": {
                    "type": "boolean"
                },
                "server": {
                    "$ref": "#/definitions/env.Resources"
                },
                "settings": {
                    "$ref": "#/definitions/customize.Settings"
                },
                "siteAuthor": {
                    "type": "string"
                },
                "siteCaption": {
                    "type": "string"
                },
                "siteDescription": {
                    "type": "string"
                },
                "siteDomain": {
                    "type": "string"
                },
                "sitePreview": {
                    "type": "string"
                },
                "siteTitle": {
                    "type": "string"
                },
                "siteUrl": {
                    "type": "string"
                },
                "sponsor": {
                    "type": "boolean"
                },
                "staticUri": {
                    "type": "string"
                },
                "test": {
                    "type": "boolean"
                },
                "thumbs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/config.ThumbSize"
                    }
                },
                "tier": {
                    "type": "integer"
                },
                "trace": {
                    "type": "boolean"
                },
                "uploadNSFW": {
                    "type": "boolean"
                },
                "usersPath": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "videoUri": {
                    "type": "string"
                },
                "wallpaperUri": {
                    "type": "string"
                },
                "years": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "config.ClientCounts": {
            "type": "object",
            "properties": {
                "albums": {
                    "type": "integer"
                },
                "all": {
                    "type": "integer"
                },
                "archived": {
                    "type": "integer"
                },
                "cameras": {
                    "type": "integer"
                },
                "countries": {
                    "type": "integer"
                },
                "favorites": {
                    "type": "integer"
                },
                "files": {
                    "type": "integer"
                },
                "folders": {
                    "type": "integer"
                },
                "hidden": {
                    "type": "integer"
                },
                "labelMaxPhotos": {
                    "type": "integer"
                },
                "labels": {
                    "type": "integer"
                },
                "lenses": {
                    "type": "integer"
                },
                "live": {
                    "type": "integer"
                },
                "moments": {
                    "type": "integer"
                },
                "months": {
                    "type": "integer"
                },
                "people": {
                    "type": "integer"
                },
                "photos": {
                    "type": "integer"
                },
                "places": {
                    "type": "integer"
                },
                "private": {
                    "type": "integer"
                },
                "private_albums": {
                    "type": "integer"
                },
                "private_folders": {
                    "type": "integer"
                },
                "private_moments": {
                    "type": "integer"
                },
                "private_months": {
                    "type": "integer"
                },
                "private_states": {
                    "type": "integer"
                },
                "review": {
                    "type": "integer"
                },
                "states": {
                    "type": "integer"
                },
                "stories": {
                    "type": "integer"
                },
                "videos": {
                    "type": "integer"
                }
            }
        },
        "config.ClientDisable": {
            "type": "object",
            "properties": {
                "backups": {
                    "type": "boolean"
                },
                "classification": {
                    "type": "boolean"
                },
                "darktable": {
                    "type": "boolean"
                },
                "exiftool": {
                    "type": "boolean"
                },
                "faces": {
                    "type": "boolean"
                },
                "ffmpeg": {
                    "type": "boolean"
                },
                "heifconvert": {
                    "type": "boolean"
                },
                "imagemagick": {
                    "type": "boolean"
                },
                "jpegxl": {
                    "type": "boolean"
                },
                "places": {
                    "type": "boolean"
                },
                "raw": {
                    "type": "boolean"
                },
                "rawtherapee": {
                    "type": "boolean"
                },
                "restart": {
                    "type": "boolean"
                },
                "settings": {
                    "type": "boolean"
                },
                "sips": {
                    "type": "boolean"
                },
                "tensorflow": {
                    "type": "boolean"
                },
                "vectors": {
                    "type": "boolean"
                },
                "vips": {
                    "type": "boolean"
                },
                "webdav": {
                    "type": "boolean"
                }
            }
        },
        "config.ClientPosition": {
            "type": "object",
            "properties": {
                "cid": {
                    "type": "string"
                },
                "lat": {
                    "type": "number"
                },
                "lng": {
                    "type": "number"
                },
                "uid": {
                    "type": "string"
                },
                "utc": {
                    "type": "string"
                }
            }
        },
        "config.Map": {
            "type": "object",
            "additionalProperties": true
        },
        "config.Options": {
            "type": "object",
            "properties": {
                "AppColor": {
                    "type": "string"
                },
                "AppIcon": {
                    "type": "string"
                },
                "AppMode": {
                    "type": "string"
                },
                "AppName": {
                    "type": "string"
                },
                "AutoImport": {
                    "type": "integer"
                },
                "AutoIndex": {
                    "type": "integer"
                },
                "BackupAlbums": {
                    "type": "boolean",
                    "default": true
                },
                "BackupDatabase": {
                    "type": "boolean",
                    "default": true
                },
                "BackupRetain": {
                    "type": "integer"
                },
                "BackupSchedule": {
                    "type": "string"
                },
                "CdnUrl": {
                    "type": "string"
                },
                "CdnVideo": {
                    "type": "boolean"
                },
                "Debug": {
                    "type": "boolean"
                },
                "DefaultLocale": {
                    "type": "string"
                },
                "DefaultTLS": {
                    "type": "boolean"
                },
                "DefaultTheme": {
                    "type": "string"
                },
                "DefaultTimezone": {
                    "type": "string"
                },
                "DetectNSFW": {
                    "type": "boolean"
                },
                "DisableBackups": {
                    "type": "boolean"
                },
                "DisableClassification": {
                    "type": "boolean"
                },
                "DisableDarktable": {
                    "type": "boolean"
                },
                "DisableExifTool": {
                    "type": "boolean"
                },
                "DisableFFmpeg": {
                    "type": "boolean"
                },
                "DisableFaces": {
                    "type": "boolean"
                },
                "DisableHeifConvert": {
                    "type": "boolean"
                },
                "DisableImageMagick": {
                    "type": "boolean"
                },
                "DisableJpegXL": {
                    "type": "boolean"
                },
                "DisableOIDC": {
                    "type": "boolean"
                },
                "DisablePlaces": {
                    "type": "boolean"
                },
                "DisableRaw": {
                    "type": "boolean"
                },
                "DisableRawTherapee": {
                    "type": "boolean"
                },
                "DisableSips": {
                    "type": "boolean"
                },
                "DisableTLS": {
                    "type": "boolean"
                },
                "DisableTensorFlow": {
                    "type": "boolean"
                },
                "DisableVectors": {
                    "type": "boolean"
                },
                "DisableVips": {
                    "type": "boolean"
                },
                "DisableWebDAV": {
                    "type": "boolean"
                },
                "ExifBruteForce": {
                    "type": "boolean"
                },
                "Experimental": {
                    "type": "boolean"
                },
                "FFmpegBitrate": {
                    "type": "integer"
                },
                "FFmpegEncoder": {
                    "type": "string"
                },
                "FFmpegMapAudio": {
                    "type": "string"
                },
                "FFmpegMapVideo": {
                    "type": "string"
                },
                "FFmpegSize": {
                    "type": "integer"
                },
                "HttpCacheMaxAge": {
                    "type": "integer"
                },
                "HttpCachePublic": {
                    "type": "boolean"
                },
                "HttpVideoMaxAge": {
                    "type": "integer"
                },
                "HttpsProxy": {
                    "type": "string"
                },
                "HttpsProxyInsecure": {
                    "type": "boolean"
                },
                "IndexSchedule": {
                    "type": "string"
                },
                "IndexWorkers": {
                    "type": "integer"
                },
                "JpegQuality": {
                    "type": "integer"
                },
                "JpegSize": {
                    "type": "integer"
                },
                "LegalInfo": {
                    "type": "string"
                },
                "LegalUrl": {
                    "type": "string"
                },
                "OIDCIcon": {
                    "type": "string"
                },
                "OIDCProvider": {
                    "type": "string"
                },
                "OIDCRedirect": {
                    "type": "boolean"
                },
                "OIDCRegister": {
                    "type": "boolean"
                },
                "OriginalsLimit": {
                    "type": "integer"
                },
                "PngSize": {
                    "type": "integer"
                },
                "Prod": {
                    "type": "boolean"
                },
                "RawPresets": {
                    "type": "boolean"
                },
                "ReadOnly": {
                    "type": "boolean"
                },
                "ResolutionLimit": {
                    "type": "integer"
                },
                "SidecarYaml": {
                    "type": "boolean",
                    "default": true
                },
                "SiteAuthor": {
                    "type": "string"
                },
                "SiteCaption": {
                    "type": "string"
                },
                "SiteDescription": {
                    "type": "string"
                },
                "SitePreview": {
                    "type": "string"
                },
                "SiteTitle": {
                    "type": "string"
                },
                "SiteUrl": {
                    "type": "string"
                },
                "TLSCert": {
                    "type": "string"
                },
                "TLSEmail": {
                    "type": "string"
                },
                "TLSKey": {
                    "type": "string"
                },
                "Test": {
                    "type": "boolean"
                },
                "ThumbColor": {
                    "type": "string"
                },
                "ThumbFilter": {
                    "type": "string"
                },
                "ThumbLibrary": {
                    "type": "string"
                },
                "ThumbSize": {
                    "type": "integer"
                },
                "ThumbSizeUncached": {
                    "type": "integer"
                },
                "ThumbUncached": {
                    "type": "boolean"
                },
                "Trace": {
                    "type": "boolean"
                },
                "WakeupInterval": {
                    "$ref": "#/definitions/time.Duration"
                },
                "WallpaperUri": {
                    "type": "string"
                }
            }
        },
        "config.ThumbSize": {
            "type": "object",
            "properties": {
                "h": {
                    "type": "integer"
                },
                "size": {
                    "type": "string"
                },
                "usage": {
                    "type": "string"
                },
                "w": {
                    "type": "integer"
                }
            }
        },
        "customize.DownloadName": {
            "type": "string",
            "enum": [
                "file",
                "original",
                "share"
            ],
            "x-enum-varnames": [
                "DownloadNameFile",
                "DownloadNameOriginal",
                "DownloadNameShare"
            ]
        },
        "customize.DownloadSettings": {
            "type": "object",
            "properties": {
                "disabled": {
                    "type": "boolean"
                },
                "mediaRaw": {
                    "type": "boolean"
                },
                "mediaSidecar": {
                    "type": "boolean"
                },
                "name": {
                    "$ref": "#/definitions/customize.DownloadName"
                },
                "originals": {
                    "type": "boolean"
                }
            }
        },
        "customize.FeatureSettings": {
            "type": "object",
            "properties": {
                "account": {
                    "type": "boolean"
                },
                "albums": {
                    "type": "boolean"
                },
                "archive": {
                    "type": "boolean"
                },
                "delete": {
                    "type": "boolean"
                },
                "download": {
                    "type": "boolean"
                },
                "edit": {
                    "type": "boolean"
                },
                "estimates": {
                    "type": "boolean"
                },
                "favorites": {
                    "type": "boolean"
                },
                "files": {
                    "type": "boolean"
                },
                "folders": {
                    "type": "boolean"
                },
                "import": {
                    "type": "boolean"
                },
                "labels": {
                    "type": "boolean"
                },
                "library": {
                    "type": "boolean"
                },
                "logs": {
                    "type": "boolean"
                },
                "moments": {
                    "type": "boolean"
                },
                "people": {
                    "type": "boolean"
                },
                "places": {
                    "type": "boolean"
                },
                "private": {
                    "type": "boolean"
                },
                "ratings": {
                    "type": "boolean"
                },
                "reactions": {
                    "type": "boolean"
                },
                "review": {
                    "type": "boolean"
                },
                "search": {
                    "type": "boolean"
                },
                "services": {
                    "type": "boolean"
                },
                "settings": {
                    "type": "boolean"
                },
                "share": {
                    "type": "boolean"
                },
                "upload": {
                    "type": "boolean"
                },
                "videos": {
                    "type": "boolean"
                }
            }
        },
        "customize.ImportSettings": {
            "type": "object",
            "properties": {
                "move": {
                    "type": "boolean"
                },
                "path": {
                    "type": "string"
                }
            }
        },
        "customize.IndexSettings": {
            "type": "object",
            "properties": {
                "convert": {
                    "type": "boolean"
                },
                "path": {
                    "type": "string"
                },
                "rescan": {
                    "type": "boolean"
                },
                "skipArchived": {
                    "type": "boolean"
                }
            }
        },
        "customize.MapsSettings": {
            "type": "object",
            "properties": {
                "animate": {
                    "type": "integer"
                },
                "style": {
                    "type": "string"
                }
            }
        },
        "customize.SearchSettings": {
            "type": "object",
            "properties": {
                "batchSize": {
                    "type": "integer"
                }
            }
        },
        "customize.Settings": {
            "type": "object",
            "properties": {
                "download": {
                    "$ref": "#/definitions/customize.DownloadSettings"
                },
                "features": {
                    "$ref": "#/definitions/customize.FeatureSettings"
                },
                "import": {
                    "$ref": "#/definitions/customize.ImportSettings"
                },
                "index": {
                    "$ref": "#/definitions/customize.IndexSettings"
                },
                "maps": {
                    "$ref": "#/definitions/customize.MapsSettings"
                },
                "search": {
                    "$ref": "#/definitions/customize.SearchSettings"
                },
                "share": {
                    "$ref": "#/definitions/customize.ShareSettings"
                },
                "stack": {
                    "$ref": "#/definitions/customize.StackSettings"
                },
                "templates": {
                    "$ref": "#/definitions/customize.TemplateSettings"
                },
                "ui": {
                    "$ref": "#/definitions/customize.UISettings"
                }
            }
        },
        "customize.ShareSettings": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string"
                }
            }
        },
        "customize.StackSettings": {
            "type": "object",
            "properties": {
                "meta": {
                    "type": "boolean"
                },
                "name": {
                    "type": "boolean"
                },
                "uuid": {
                    "type": "boolean"
                }
            }
        },
        "customize.TemplateSettings": {
            "type": "object",
            "properties": {
                "default": {
                    "type": "string"
                }
            }
        },
        "customize.UISettings": {
            "type": "object",
            "properties": {
                "language": {
                    "type": "string"
                },
                "scrollbar": {
                    "type": "boolean"
                },
                "theme": {
                    "type": "string"
                },
                "timeZone": {
                    "type": "string"
                },
                "zoom": {
                    "type": "boolean"
                }
            }
        },
        "entity.Album": {
            "type": "object",
            "properties": {
                "Caption": {
                    "type": "string"
                },
                "Category": {
                    "type": "string"
                },
                "Country": {
                    "type": "string"
                },
                "CreatedAt": {
                    "type": "string"
                },
                "CreatedBy": {
                    "type": "string"
                },
                "Day": {
                    "type": "integer"
                },
                "DeletedAt": {
                    "type": "string"
                },
                "Description": {
                    "type": "string"
                },
                "Favorite": {
                    "type": "boolean"
                },
                "Filter": {
                    "type": "string"
                },
                "ID": {
                    "type": "integer"
                },
                "Location": {
                    "type": "string"
                },
                "Month": {
                    "type": "integer"
                },
                "Notes": {
                    "type": "string"
                },
                "Order": {
                    "type": "string"
                },
                "ParentUID": {
                    "type": "string"
                },
                "Path": {
                    "type": "string"
                },
                "Private": {
                    "type": "boolean"
                },
                "PublishedAt": {
                    "type": "string"
                },
                "Slug": {
                    "type": "string"
                },
                "State": {
                    "type": "string"
                },
                "Template": {
                    "type": "string"
                },
                "Thumb": {
                    "type": "string"
                },
                "ThumbSrc": {
                    "type": "string"
                },
                "Title": {
                    "type": "string"
                },
                "Type": {
                    "type": "string"
                },
                "UID": {
                    "type": "string"
                },
                "UpdatedAt": {
                    "type": "string"
                },
                "Year": {
                    "type": "integer"
                }
            }
        },
        "entity.Camera": {
            "type": "object",
            "properties": {
                "Description": {
                    "type": "string"
                },
                "ID": {
                    "type": "integer"
                },
                "Make": {
                    "type": "string"
                },
                "Model": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "Notes": {
                    "type": "string"
                },
                "Slug": {
                    "type": "string"
                },
                "Type": {
                    "type": "string"
                }
            }
        },
        "entity.Cell": {
            "type": "object",
            "properties": {
                "Category": {
                    "type": "string"
                },
                "CreatedAt": {
                    "type": "string"
                },
                "ID": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "Place": {
                    "$ref": "#/definitions/entity.Place"
                },
                "Postcode": {
                    "type": "string"
                },
                "Street": {
                    "type": "string"
                },
                "UpdatedAt": {
                    "type": "string"
                }
            }
        },
        "entity.Country": {
            "type": "object",
            "properties": {
                "Description": {
                    "type": "string"
                },
                "ID": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "Notes": {
                    "type": "string"
                },
                "Slug": {
                    "type": "string"
                }
            }
        },
        "entity.Details": {
            "type": "object",
            "properties": {
                "Artist": {
                    "type": "string"
                },
                "ArtistSrc": {
                    "type": "string"
                },
                "Copyright": {
                    "type": "string"
                },
                "CopyrightSrc": {
                    "type": "string"
                },
                "Keywords": {
                    "type": "string"
                },
                "KeywordsSrc": {
                    "type": "string"
                },
                "License": {
                    "type": "string"
                },
                "LicenseSrc": {
                    "type": "string"
                },
                "Notes": {
                    "type": "string"
                },
                "NotesSrc": {
                    "type": "string"
                },
                "Software": {
                    "type": "string"
                },
                "SoftwareSrc": {
                    "type": "string"
                },
                "Subject": {
                    "type": "string"
                },
                "SubjectSrc": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "photoID": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "entity.Error": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "integer"
                },
                "Level": {
                    "type": "string"
                },
                "Message": {
                    "type": "string"
                },
                "Time": {
                    "type": "string"
                }
            }
        },
        "entity.Face": {
            "type": "object",
            "properties": {
                "CollisionRadius": {
                    "type": "number"
                },
                "Collisions": {
                    "type": "integer"
                },
                "CreatedAt": {
                    "type": "string"
                },
                "Hidden": {
                    "type": "boolean"
                },
                "ID": {
                    "type": "string"
                },
                "Kind": {
                    "type": "integer"
                },
                "MatchedAt": {
                    "type": "string"
                },
                "SampleRadius": {
                    "type": "number"
                },
                "Samples": {
                    "type": "integer"
                },
                "Src": {
                    "type": "string"
                },
                "SubjUID": {
                    "type": "string"
                },
                "UpdatedAt": {
                    "type": "string"
                }
            }
        },
        "entity.File": {
            "type": "object",
            "properties": {
                "AspectRatio": {
                    "type": "number"
                },
                "Chroma": {
                    "type": "integer"
                },
                "Codec": {
                    "type": "string"
                },
                "ColorProfile": {
                    "type": "string"
                },
                "Colors": {
                    "type": "string"
                },
                "CreatedAt": {
                    "type": "string"
                },
                "CreatedIn": {
                    "type": "integer"
                },
                "DeletedAt": {
                    "type": "string"
                },
                "Diff": {
                    "type": "integer"
                },
                "Duration": {
                    "$ref": "#/definitions/time.Duration"
                },
                "Error": {
                    "type": "string"
                },
                "FPS": {
                    "type": "number"
                },
                "FileType": {
                    "type": "string"
                },
                "Frames": {
                    "type": "integer"
                },
                "HDR": {
                    "type": "boolean"
                },
                "Hash": {
                    "type": "string"
                },
                "Height": {
                    "type": "integer"
                },
                "InstanceID": {
                    "type": "string"
                },
                "Luminance": {
                    "type": "string"
                },
                "MainColor": {
                    "type": "string"
                },
                "MediaID": {
                    "type": "string"
                },
                "MediaType": {
                    "type": "string"
                },
                "MediaUTC": {
                    "type": "integer"
                },
                "Mime": {
                    "type": "string"
                },
                "Missing": {
                    "type": "boolean"
                },
                "ModTime": {
                    "type": "integer"
                },
                "Name": {
                    "type": "string"
                },
                "Orientation": {
                    "type": "integer"
                },
                "OrientationSrc": {
                    "type": "string"
                },
                "OriginalName": {
                    "type": "string"
                },
                "PhotoUID": {
                    "type": "string"
                },
                "Portrait": {
                    "type": "boolean"
                },
                "Primary": {
                    "type": "boolean"
                },
                "Projection": {
                    "type": "string"
                },
                "PublishedAt": {
                    "type": "string"
                },
                "Root": {
                    "type": "string"
                },
                "Sidecar": {
                    "type": "boolean"
                },
                "Size": {
                    "type": "integer"
                },
                "Software": {
                    "type": "string"
                },
                "TakenAt": {
                    "type": "string"
                },
                "TimeIndex": {
                    "type": "string"
                },
                "UID": {
                    "type": "string"
                },
                "UpdatedAt": {
                    "type": "string"
                },
                "UpdatedIn": {
                    "type": "integer"
                },
                "Video": {
                    "type": "boolean"
                },
                "Watermark": {
                    "type": "boolean"
                },
                "Width": {
                    "type": "integer"
                }
            }
        },
        "entity.Label": {
            "type": "object",
            "properties": {
                "CreatedAt": {
                    "type": "string"
                },
                "CustomSlug": {
                    "type": "string"
                },
                "DeletedAt": {
                    "type": "string"
                },
                "Description": {
                    "type": "string"
                },
                "Favorite": {
                    "type": "boolean"
                },
                "ID": {
                    "type": "integer"
                },
                "Name": {
                    "type": "string"
                },
                "Notes": {
                    "type": "string"
                },
                "PhotoCount": {
                    "type": "integer"
                },
                "Priority": {
                    "type": "integer"
                },
                "PublishedAt": {
                    "type": "string"
                },
                "Slug": {
                    "type": "string"
                },
                "Thumb": {
                    "type": "string"
                },
                "ThumbSrc": {
                    "type": "string"
                },
                "UID": {
                    "type": "string"
                },
                "UpdatedAt": {
                    "type": "string"
                }
            }
        },
        "entity.Lens": {
            "type": "object",
            "properties": {
                "Description": {
                    "type": "string"
                },
                "ID": {
                    "type": "integer"
                },
                "Make": {
                    "type": "string"
                },
                "Model": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "Notes": {
                    "type": "string"
                },
                "Slug": {
                    "type": "string"
                },
                "Type": {
                    "type": "string"
                }
            }
        },
        "entity.Link": {
            "type": "object",
            "properties": {
                "Comment": {
                    "type": "string"
                },
                "CreatedAt": {
                    "type": "string"
                },
                "CreatedBy": {
                    "type": "string"
                },
                "Expires": {
                    "type": "integer"
                },
                "MaxViews": {
                    "type": "integer"
                },
                "ModifiedAt": {
                    "type": "string"
                },
                "Perm": {
                    "type": "integer"
                },
                "ShareUID": {
                    "type": "string"
                },
                "Slug": {
                    "type": "string"
                },
                "Token": {
                    "type": "string"
                },
                "UID": {
                    "type": "string"
                },
                "VerifyPassword": {
                    "type": "boolean"
                },
                "Views": {
                    "type": "integer"
                }
            }
        },
        "entity.Person": {
            "type": "object",
            "properties": {
                "Alias": {
                    "type": "string"
                },
                "Favorite": {
                    "type": "boolean"
                },
                "Hidden": {
                    "type": "boolean"
                },
                "Name": {
                    "type": "string"
                },
                "UID": {
                    "type": "string"
                }
            }
        },
        "entity.Photo": {
            "type": "object",
            "properties": {
                "Albums": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Album"
                    }
                },
                "Altitude": {
                    "type": "integer"
                },
                "Camera": {
                    "$ref": "#/definitions/entity.Camera"
                },
                "CameraID": {
                    "type": "integer"
                },
                "CameraSerial": {
                    "type": "string"
                },
                "CameraSrc": {
                    "type": "string"
                },
                "Cell": {
                    "$ref": "#/definitions/entity.Cell"
                },
                "CellAccuracy": {
                    "type": "integer"
                },
                "CellID": {
                    "type": "string"
                },
                "Color": {
                    "type": "integer"
                },
                "Country": {
                    "type": "string"
                },
                "CreatedBy": {
                    "type": "string"
                },
                "Day": {
                    "type": "integer"
                },
                "Description": {
                    "type": "string"
                },
                "DescriptionSrc": {
                    "type": "string"
                },
                "Details": {
                    "$ref": "#/definitions/entity.Details"
                },
                "DocumentID": {
                    "type": "string"
                },
                "Duration": {
                    "$ref": "#/definitions/time.Duration"
                },
                "EstimatedAt": {
                    "type": "string"
                },
                "Exposure": {
                    "type": "string"
                },
                "FNumber": {
                    "type": "number"
                },
                "Faces": {
                    "type": "integer"
                },
                "Favorite": {
                    "type": "boolean"
                },
                "FocalLength": {
                    "type": "integer"
                },
                "Iso": {
                    "type": "integer"
                },
                "Lat": {
                    "type": "number"
                },
                "Lens": {
                    "$ref": "#/definitions/entity.Lens"
                },
                "LensID": {
                    "type": "integer"
                },
                "Lng": {
                    "type": "number"
                },
                "Month": {
                    "type": "integer"
                },
                "Name": {
                    "type": "string"
                },
                "OriginalName": {
                    "type": "string"
                },
                "Panorama": {
                    "type": "boolean"
                },
                "Path": {
                    "type": "string"
                },
                "Place": {
                    "$ref": "#/definitions/entity.Place"
                },
                "PlaceID": {
                    "type": "string"
                },
                "PlaceSrc": {
                    "type": "string"
                },
                "Private": {
                    "type": "boolean"
                },
                "PublishedAt": {
                    "type": "string"
                },
                "Quality": {
                    "type": "integer"
                },
                "Resolution": {
                    "type": "integer"
                },
                "Scan": {
                    "type": "boolean"
                },
                "Stack": {
                    "type": "integer"
                },
                "TakenAt": {
                    "type": "string"
                },
                "TakenAtLocal": {
                    "type": "string"
                },
                "TakenSrc": {
                    "type": "string"
                },
                "TimeZone": {
                    "type": "string"
                },
                "Title": {
                    "type": "string"
                },
                "TitleSrc": {
                    "type": "string"
                },
                "Type": {
                    "type": "string"
                },
                "TypeSrc": {
                    "type": "string"
                },
                "UID": {
                    "type": "string"
                },
                "Year": {
                    "type": "integer"
                },
                "checkedAt": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "editedAt": {
                    "type": "string"
                },
                "files": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.File"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.PhotoLabel"
                    }
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "entity.PhotoLabel": {
            "type": "object",
            "properties": {
                "label": {
                    "$ref": "#/definitions/entity.Label"
                },
                "labelID": {
                    "type": "integer"
                },
                "labelSrc": {
                    "type": "string"
                },
                "photo": {
                    "$ref": "#/definitions/entity.Photo"
                },
                "photoID": {
                    "type": "integer"
                },
                "uncertainty": {
                    "type": "integer"
                }
            }
        },
        "entity.Place": {
            "type": "object",
            "properties": {
                "City": {
                    "type": "string"
                },
                "Country": {
                    "type": "string"
                },
                "CreatedAt": {
                    "type": "string"
                },
                "District": {
                    "type": "string"
                },
                "Favorite": {
                    "type": "boolean"
                },
                "Keywords": {
                    "type": "string"
                },
                "Label": {
                    "type": "string"
                },
                "PhotoCount": {
                    "type": "integer"
                },
                "PlaceID": {
                    "type": "string"
                },
                "State": {
                    "type": "string"
                },
                "UpdatedAt": {
                    "type": "string"
                }
            }
        },
        "entity.Service": {
            "type": "object",
            "properties": {
                "accError": {
                    "type": "string"
                },
                "accErrors": {
                    "type": "integer"
                },
                "accKey": {
                    "type": "string"
                },
                "accName": {
                    "type": "string"
                },
                "accOwner": {
                    "type": "string"
                },
                "accPass": {
                    "type": "string"
                },
                "accShare": {
                    "type": "boolean"
                },
                "accSync": {
                    "type": "boolean"
                },
                "accTimeout": {
                    "type": "string"
                },
                "accType": {
                    "type": "string"
                },
                "accURL": {
                    "type": "string"
                },
                "accUser": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "retryLimit": {
                    "type": "integer"
                },
                "shareExpires": {
                    "type": "integer"
                },
                "sharePath": {
                    "type": "string"
                },
                "shareSize": {
                    "type": "string"
                },
                "syncDate": {
                    "$ref": "#/definitions/sql.NullTime"
                },
                "syncDownload": {
                    "type": "boolean"
                },
                "syncFilenames": {
                    "type": "boolean"
                },
                "syncInterval": {
                    "type": "integer"
                },
                "syncPath": {
                    "type": "string"
                },
                "syncRaw": {
                    "type": "boolean"
                },
                "syncStatus": {
                    "type": "string"
                },
                "syncUpload": {
                    "type": "boolean"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "entity.Subject": {
            "type": "object",
            "properties": {
                "About": {
                    "type": "string"
                },
                "Alias": {
                    "type": "string"
                },
                "Bio": {
                    "type": "string"
                },
                "CreatedAt": {
                    "type": "string"
                },
                "DeletedAt": {
                    "type": "string"
                },
                "Excluded": {
                    "type": "boolean"
                },
                "Favorite": {
                    "type": "boolean"
                },
                "FileCount": {
                    "type": "integer"
                },
                "Hidden": {
                    "type": "boolean"
                },
                "Name": {
                    "type": "string"
                },
                "Notes": {
                    "type": "string"
                },
                "PhotoCount": {
                    "type": "integer"
                },
                "Private": {
                    "type": "boolean"
                },
                "Slug": {
                    "type": "string"
                },
                "Src": {
                    "type": "string"
                },
                "Thumb": {
                    "type": "string"
                },
                "ThumbSrc": {
                    "type": "string"
                },
                "Type": {
                    "type": "string"
                },
                "UID": {
                    "type": "string"
                },
                "UpdatedAt": {
                    "type": "string"
                }
            }
        },
        "env.Resources": {
            "type": "object",
            "properties": {
                "cores": {
                    "type": "integer"
                },
                "memory": {
                    "type": "object",
                    "properties": {
                        "free": {
                            "type": "integer"
                        },
                        "info": {
                            "type": "string"
                        },
                        "reserved": {
                            "type": "integer"
                        },
                        "total": {
                            "type": "integer"
                        },
                        "used": {
                            "type": "integer"
                        }
                    }
                },
                "routines": {
                    "type": "integer"
                }
            }
        },
        "form.Album": {
            "type": "object",
            "properties": {
                "Caption": {
                    "type": "string"
                },
                "Category": {
                    "type": "string"
                },
                "Country": {
                    "type": "string"
                },
                "Description": {
                    "type": "string"
                },
                "Favorite": {
                    "type": "boolean"
                },
                "Filter": {
                    "type": "string"
                },
                "Location": {
                    "type": "string"
                },
                "Notes": {
                    "type": "string"
                },
                "Order": {
                    "type": "string"
                },
                "Private": {
                    "type": "boolean"
                },
                "Template": {
                    "type": "string"
                },
                "Thumb": {
                    "type": "string"
                },
                "ThumbSrc": {
                    "type": "string"
                },
                "Title": {
                    "type": "string"
                },
                "Type": {
                    "type": "string"
                }
            }
        },
        "form.Details": {
            "type": "object",
            "properties": {
                "Artist": {
                    "type": "string"
                },
                "ArtistSrc": {
                    "type": "string"
                },
                "Copyright": {
                    "type": "string"
                },
                "CopyrightSrc": {
                    "type": "string"
                },
                "Keywords": {
                    "type": "string"
                },
                "KeywordsSrc": {
                    "type": "string"
                },
                "License": {
                    "type": "string"
                },
                "LicenseSrc": {
                    "type": "string"
                },
                "Notes": {
                    "type": "string"
                },
                "NotesSrc": {
                    "type": "string"
                },
                "PhotoID": {
                    "type": "integer"
                },
                "Subject": {
                    "type": "string"
                },
                "SubjectSrc": {
                    "type": "string"
                }
            }
        },
        "form.Face": {
            "type": "object",
            "properties": {
                "Hidden": {
                    "type": "boolean"
                },
                "SubjUID": {
                    "type": "string"
                }
            }
        },
        "form.File": {
            "type": "object",
            "properties": {
                "Orientation": {
                    "type": "integer"
                }
            }
        },
        "form.Label": {
            "type": "object",
            "properties": {
                "Name": {
                    "type": "string"
                },
                "Priority": {
                    "type": "integer"
                },
                "Uncertainty": {
                    "type": "integer"
                }
            }
        },
        "form.Link": {
            "type": "object",
            "properties": {
                "CanComment": {
                    "type": "boolean"
                },
                "CanEdit": {
                    "type": "boolean"
                },
                "Expires": {
                    "type": "integer"
                },
                "MaxViews": {
                    "type": "integer"
                },
                "Password": {
                    "type": "string"
                },
                "Slug": {
                    "type": "string"
                },
                "Token": {
                    "type": "string"
                }
            }
        },
        "form.Photo": {
            "type": "object",
            "properties": {
                "Altitude": {
                    "type": "integer"
                },
                "CameraID": {
                    "type": "integer"
                },
                "CameraSrc": {
                    "type": "string"
                },
                "CellAccuracy": {
                    "type": "integer"
                },
                "CellID": {
                    "type": "string"
                },
                "Country": {
                    "type": "string"
                },
                "Day": {
                    "type": "integer"
                },
                "Description": {
                    "type": "string"
                },
                "DescriptionSrc": {
                    "type": "string"
                },
                "Details": {
                    "$ref": "#/definitions/form.Details"
                },
                "Exposure": {
                    "type": "string"
                },
                "FNumber": {
                    "type": "number"
                },
                "Favorite": {
                    "type": "boolean"
                },
                "FocalLength": {
                    "type": "integer"
                },
                "Iso": {
                    "type": "integer"
                },
                "Lat": {
                    "type": "number"
                },
                "LensID": {
                    "type": "integer"
                },
                "Lng": {
                    "type": "number"
                },
                "Month": {
                    "type": "integer"
                },
                "OriginalName": {
                    "type": "string"
                },
                "Panorama": {
                    "type": "boolean"
                },
                "PlaceID": {
                    "type": "string"
                },
                "PlaceSrc": {
                    "type": "string"
                },
                "Private": {
                    "type": "boolean"
                },
                "Scan": {
                    "type": "boolean"
                },
                "Stack": {
                    "type": "integer"
                },
                "TakenAt": {
                    "type": "string"
                },
                "TakenAtLocal": {
                    "type": "string"
                },
                "TakenSrc": {
                    "type": "string"
                },
                "TimeZone": {
                    "type": "string"
                },
                "Title": {
                    "type": "string"
                },
                "TitleSrc": {
                    "type": "string"
                },
                "Type": {
                    "type": "string"
                },
                "TypeSrc": {
                    "type": "string"
                },
                "Year": {
                    "type": "integer"
                }
            }
        },
        "form.Selection": {
            "type": "object",
            "properties": {
                "albums": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "all": {
                    "type": "boolean"
                },
                "files": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "photos": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "places": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "subjects": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "form.Service": {
            "type": "object",
            "properties": {
                "AccError": {
                    "type": "string"
                },
                "AccKey": {
                    "type": "string"
                },
                "AccName": {
                    "type": "string"
                },
                "AccOwner": {
                    "type": "string"
                },
                "AccPass": {
                    "type": "string"
                },
                "AccShare": {
                    "description": "Manual upload enabled, see SharePath, ShareSize, and ShareExpires.",
                    "type": "boolean"
                },
                "AccSync": {
                    "description": "Background sync enabled, see SyncDownload and SyncUpload.",
                    "type": "boolean"
                },
                "AccTimeout": {
                    "description": "Request timeout: default, high, medium, low, none",
                    "type": "string"
                },
                "AccType": {
                    "type": "string"
                },
                "AccURL": {
                    "type": "string"
                },
                "AccUser": {
                    "type": "string"
                },
                "RetryLimit": {
                    "description": "Maximum number of failed requests.",
                    "type": "integer"
                },
                "ShareExpires": {
                    "type": "integer"
                },
                "SharePath": {
                    "type": "string"
                },
                "ShareSize": {
                    "type": "string"
                },
                "SyncDownload": {
                    "type": "boolean"
                },
                "SyncFilenames": {
                    "type": "boolean"
                },
                "SyncInterval": {
                    "type": "integer"
                },
                "SyncPath": {
                    "type": "string"
                },
                "SyncRaw": {
                    "type": "boolean"
                },
                "SyncUpload": {
                    "type": "boolean"
                }
            }
        },
        "form.Subject": {
            "type": "object",
            "properties": {
                "About": {
                    "type": "string"
                },
                "Alias": {
                    "type": "string"
                },
                "Bio": {
                    "type": "string"
                },
                "Excluded": {
                    "type": "boolean"
                },
                "Favorite": {
                    "type": "boolean"
                },
                "Hidden": {
                    "type": "boolean"
                },
                "Name": {
                    "type": "string"
                },
                "Notes": {
                    "type": "string"
                },
                "Private": {
                    "type": "boolean"
                }
            }
        },
        "gin.H": {
            "type": "object",
            "additionalProperties": {}
        },
        "http.Header": {
            "type": "object",
            "additionalProperties": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            }
        },
        "http.Request": {
            "type": "object",
            "properties": {
                "body": {
                    "description": "Body is the request's body.\n\nFor client requests, a nil body means the request has no\nbody, such as a GET request. The HTTP Client's Transport\nis responsible for calling the Close method.\n\nFor server requests, the Request Body is always non-nil\nbut will return EOF immediately when no body is present.\nThe Server will close the request body. The ServeHTTP\nHandler does not need to.\n\nBody must allow Read to be called concurrently with Close.\nIn particular, calling Close should unblock a Read waiting\nfor input."
                },
                "cancel": {
                    "description": "Cancel is an optional channel whose closure indicates that the client\nrequest should be regarded as canceled. Not all implementations of\nRoundTripper may support Cancel.\n\nFor server requests, this field is not applicable.\n\nDeprecated: Set the Request's context with NewRequestWithContext\ninstead. If a Request's Cancel field and context are both\nset, it is undefined whether Cancel is respected.",
                    "type": "object"
                },
                "close": {
                    "description": "Close indicates whether to close the connection after\nreplying to this request (for servers) or after sending this\nrequest and reading its response (for clients).\n\nFor server requests, the HTTP server handles this automatically\nand this field is not needed by Handlers.\n\nFor client requests, setting this field prevents re-use of\nTCP connections between requests to the same hosts, as if\nTransport.DisableKeepAlives were set.",
                    "type": "boolean"
                },
                "contentLength": {
                    "description": "ContentLength records the length of the associated content.\nThe value -1 indicates that the length is unknown.\nValues \u003e= 0 indicate that the given number of bytes may\nbe read from Body.\n\nFor client requests, a value of 0 with a non-nil Body is\nalso treated as unknown.",
                    "type": "integer"
                },
                "form": {
                    "description": "Form contains the parsed form data, including both the URL\nfield's query parameters and the PATCH, POST, or PUT form data.\nThis field is only available after ParseForm is called.\nThe HTTP client ignores Form and uses Body instead.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/url.Values"
                        }
                    ]
                },
                "header": {
                    "description": "Header contains the request header fields either received\nby the server or to be sent by the client.\n\nIf a server received a request with header lines,\n\n\tHost: example.com\n\taccept-encoding: gzip, deflate\n\tAccept-Language: en-us\n\tfOO: Bar\n\tfoo: two\n\nthen\n\n\tHeader = map[string][]string{\n\t\t\"Accept-Encoding\": {\"gzip, deflate\"},\n\t\t\"Accept-Language\": {\"en-us\"},\n\t\t\"Foo\": {\"Bar\", \"two\"},\n\t}\n\nFor incoming requests, the Host header is promoted to the\nRequest.Host field and removed from the Header map.\n\nHTTP defines that header names are case-insensitive. The\nrequest parser implements this by using CanonicalHeaderKey,\nmaking the first character and any characters following a\nhyphen uppercase and the rest lowercase.\n\nFor client requests, certain headers such as Content-Length\nand Connection are automatically written when needed and\nvalues in Header may be ignored. See the documentation\nfor the Request.Write method.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/http.Header"
                        }
                    ]
                },
                "host": {
                    "description": "For server requests, Host specifies the host on which the\nURL is sought. For HTTP/1 (per RFC 7230, section 5.4), this\nis either the value of the \"Host\" header or the host name\ngiven in the URL itself. For HTTP/2, it is the value of the\n\":authority\" pseudo-header field.\nIt may be of the form \"host:port\". For international domain\nnames, Host may be in Punycode or Unicode form. Use\ngolang.org/x/net/idna to convert it to either format if\nneeded.\nTo prevent DNS rebinding attacks, server Handlers should\nvalidate that the Host header has a value for which the\nHandler considers itself authoritative. The included\nServeMux supports patterns registered to particular host\nnames and thus protects its registered Handlers.\n\nFor client requests, Host optionally overrides the Host\nheader to send. If empty, the Request.Write method uses\nthe value of URL.Host. Host may contain an international\ndomain name.",
                    "type": "string"
                },
                "method": {
                    "description": "Method specifies the HTTP method (GET, POST, PUT, etc.).\nFor client requests, an empty string means GET.",
                    "type": "string"
                },
                "multipartForm": {
                    "description": "MultipartForm is the parsed multipart form, including file uploads.\nThis field is only available after ParseMultipartForm is called.\nThe HTTP client ignores MultipartForm and uses Body instead.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/multipart.Form"
                        }
                    ]
                },
                "postForm": {
                    "description": "PostForm contains the parsed form data from PATCH, POST\nor PUT body parameters.\n\nThis field is only available after ParseForm is called.\nThe HTTP client ignores PostForm and uses Body instead.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/url.Values"
                        }
                    ]
                },
                "proto": {
                    "description": "The protocol version for incoming server requests.\n\nFor client requests, these fields are ignored. The HTTP\nclient code always uses either HTTP/1.1 or HTTP/2.\nSee the docs on Transport for details.",
                    "type": "string"
                },
                "protoMajor": {
                    "description": "1",
                    "type": "integer"
                },
                "protoMinor": {
                    "description": "0",
                    "type": "integer"
                },
                "remoteAddr": {
                    "description": "RemoteAddr allows HTTP servers and other software to record\nthe network address that sent the request, usually for\nlogging. This field is not filled in by ReadRequest and\nhas no defined format. The HTTP server in this package\nsets RemoteAddr to an \"IP:port\" address before invoking a\nhandler.\nThis field is ignored by the HTTP client.",
                    "type": "string"
                },
                "requestURI": {
                    "description": "RequestURI is the unmodified request-target of the\nRequest-Line (RFC 7230, Section 3.1.1) as sent by the client\nto a server. Usually the URL field should be used instead.\nIt is an error to set this field in an HTTP client request.",
                    "type": "string"
                },
                "response": {
                    "description": "Response is the redirect response which caused this request\nto be created. This field is only populated during client\nredirects.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/http.Response"
                        }
                    ]
                },
                "tls": {
                    "description": "TLS allows HTTP servers and other software to record\ninformation about the TLS connection on which the request\nwas received. This field is not filled in by ReadRequest.\nThe HTTP server in this package sets the field for\nTLS-enabled connections before invoking a handler;\notherwise it leaves the field nil.\nThis field is ignored by the HTTP client.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/tls.ConnectionState"
                        }
                    ]
                },
                "trailer": {
                    "description": "Trailer specifies additional headers that are sent after the request\nbody.\n\nFor server requests, the Trailer map initially contains only the\ntrailer keys, with nil values. (The client declares which trailers it\nwill later send.)  While the handler is reading from Body, it must\nnot reference Trailer. After reading from Body returns EOF, Trailer\ncan be read again and will contain non-nil values, if they were sent\nby the client.\n\nFor client requests, Trailer must be initialized to a map containing\nthe trailer keys to later send. The values may be nil or their final\nvalues. The ContentLength must be 0 or -1, to send a chunked request.\nAfter the HTTP request is sent the map values can be updated while\nthe request body is read. Once the body returns EOF, the caller must\nnot mutate Trailer.\n\nFew HTTP clients, servers, or proxies support HTTP trailers.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/http.Header"
                        }
                    ]
                },
                "transferEncoding": {
                    "description": "TransferEncoding lists the transfer encodings from outermost to\ninnermost. An empty list denotes the \"identity\" encoding.\nTransferEncoding can usually be ignored; chunked encoding is\nautomatically added and removed as necessary when sending and\nreceiving requests.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "url": {
                    "description": "URL specifies either the URI being requested (for server\nrequests) or the URL to access (for client requests).\n\nFor server requests, the URL is parsed from the URI\nsupplied on the Request-Line as stored in RequestURI.  For\nmost requests, fields other than Path and RawQuery will be\nempty. (See RFC 7230, Section 5.3)\n\nFor client requests, the URL's Host specifies the server to\nconnect to, while the Request's Host field optionally\nspecifies the Host header value to send in the HTTP\nrequest.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/url.URL"
                        }
                    ]
                }
            }
        },
        "http.Response": {
            "type": "object",
            "properties": {
                "body": {
                    "description": "Body represents the response body.\n\nThe response body is streamed on demand as the Body field\nis read. If the network connection fails or the server\nterminates the response, Body.Read calls return an error.\n\nThe http Client and Transport guarantee that Body is always\nnon-nil, even on responses without a body or responses with\na zero-length body. It is the caller's responsibility to\nclose Body. The default HTTP client's Transport may not\nreuse HTTP/1.x \"keep-alive\" TCP connections if the Body is\nnot read to completion and closed.\n\nThe Body is automatically dechunked if the server replied\nwith a \"chunked\" Transfer-Encoding.\n\nAs of Go 1.12, the Body will also implement io.Writer\non a successful \"101 Switching Protocols\" response,\nas used by WebSockets and HTTP/2's \"h2c\" mode."
                },
                "close": {
                    "description": "Close records whether the header directed that the connection be\nclosed after reading Body. The value is advice for clients: neither\nReadResponse nor Response.Write ever closes a connection.",
                    "type": "boolean"
                },
                "contentLength": {
                    "description": "ContentLength records the length of the associated content. The\nvalue -1 indicates that the length is unknown. Unless Request.Method\nis \"HEAD\", values \u003e= 0 indicate that the given number of bytes may\nbe read from Body.",
                    "type": "integer"
                },
                "header": {
                    "description": "Header maps header keys to values. If the response had multiple\nheaders with the same key, they may be concatenated, with comma\ndelimiters.  (RFC 7230, section 3.2.2 requires that multiple headers\nbe semantically equivalent to a comma-delimited sequence.) When\nHeader values are duplicated by other fields in this struct (e.g.,\nContentLength, TransferEncoding, Trailer), the field values are\nauthoritative.\n\nKeys in the map are canonicalized (see CanonicalHeaderKey).",
                    "allOf": [
                        {
                            "$ref": "#/definitions/http.Header"
                        }
                    ]
                },
                "proto": {
                    "description": "e.g. \"HTTP/1.0\"",
                    "type": "string"
                },
                "protoMajor": {
                    "description": "e.g. 1",
                    "type": "integer"
                },
                "protoMinor": {
                    "description": "e.g. 0",
                    "type": "integer"
                },
                "request": {
                    "description": "Request is the request that was sent to obtain this Response.\nRequest's Body is nil (having already been consumed).\nThis is only populated for Client requests.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/http.Request"
                        }
                    ]
                },
                "status": {
                    "description": "e.g. \"200 OK\"",
                    "type": "string"
                },
                "statusCode": {
                    "description": "e.g. 200",
                    "type": "integer"
                },
                "tls": {
                    "description": "TLS contains information about the TLS connection on which the\nresponse was received. It is nil for unencrypted responses.\nThe pointer is shared between responses and should not be\nmodified.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/tls.ConnectionState"
                        }
                    ]
                },
                "trailer": {
                    "description": "Trailer maps trailer keys to values in the same\nformat as Header.\n\nThe Trailer initially contains only nil values, one for\neach key specified in the server's \"Trailer\" header\nvalue. Those values are not added to Header.\n\nTrailer must not be accessed concurrently with Read calls\non the Body.\n\nAfter Body.Read has returned io.EOF, Trailer will contain\nany trailer values sent by the server.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/http.Header"
                        }
                    ]
                },
                "transferEncoding": {
                    "description": "Contains transfer encodings from outer-most to inner-most. Value is\nnil, means that \"identity\" encoding is used.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "uncompressed": {
                    "description": "Uncompressed reports whether the response was sent compressed but\nwas decompressed by the http package. When true, reading from\nBody yields the uncompressed content instead of the compressed\ncontent actually set from the server, ContentLength is set to -1,\nand the \"Content-Length\" and \"Content-Encoding\" fields are deleted\nfrom the responseHeader. To get the original response from\nthe server, set Transport.DisableCompression to true.",
                    "type": "boolean"
                }
            }
        },
        "i18n.Response": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "details": {
                    "type": "string"
                },
                "error": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "multipart.FileHeader": {
            "type": "object",
            "properties": {
                "filename": {
                    "type": "string"
                },
                "header": {
                    "$ref": "#/definitions/textproto.MIMEHeader"
                },
                "size": {
                    "type": "integer"
                }
            }
        },
        "multipart.Form": {
            "type": "object",
            "properties": {
                "file": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/multipart.FileHeader"
                        }
                    }
                },
                "value": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "net.IPNet": {
            "type": "object",
            "properties": {
                "ip": {
                    "description": "network number",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "mask": {
                    "description": "network mask",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "pkix.AttributeTypeAndValue": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "value": {}
            }
        },
        "pkix.Extension": {
            "type": "object",
            "properties": {
                "critical": {
                    "type": "boolean"
                },
                "id": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "value": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "pkix.Name": {
            "type": "object",
            "properties": {
                "country": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "extraNames": {
                    "description": "ExtraNames contains attributes to be copied, raw, into any marshaled\ndistinguished names. Values override any attributes with the same OID.\nThe ExtraNames field is not populated when parsing, see Names.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pkix.AttributeTypeAndValue"
                    }
                },
                "locality": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "names": {
                    "description": "Names contains all parsed attributes. When parsing distinguished names,\nthis can be used to extract non-standard attributes that are not parsed\nby this package. When marshaling to RDNSequences, the Names field is\nignored, see ExtraNames.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pkix.AttributeTypeAndValue"
                    }
                },
                "serialNumber": {
                    "type": "string"
                },
                "streetAddress": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "search.Album": {
            "type": "object",
            "properties": {
                "Caption": {
                    "type": "string"
                },
                "Category": {
                    "type": "string"
                },
                "Country": {
                    "type": "string"
                },
                "CreatedAt": {
                    "type": "string"
                },
                "Day": {
                    "type": "integer"
                },
                "DeletedAt": {
                    "type": "string"
                },
                "Description": {
                    "type": "string"
                },
                "Favorite": {
                    "type": "boolean"
                },
                "Filter": {
                    "type": "string"
                },
                "LinkCount": {
                    "type": "integer"
                },
                "Location": {
                    "type": "string"
                },
                "Month": {
                    "type": "integer"
                },
                "Notes": {
                    "type": "string"
                },
                "Order": {
                    "type": "string"
                },
                "ParentUID": {
                    "type": "string"
                },
                "Path": {
                    "type": "string"
                },
                "PhotoCount": {
                    "type": "integer"
                },
                "Private": {
                    "type": "boolean"
                },
                "Slug": {
                    "type": "string"
                },
                "State": {
                    "type": "string"
                },
                "Template": {
                    "type": "string"
                },
                "Thumb": {
                    "type": "string"
                },
                "ThumbSrc": {
                    "type": "string"
                },
                "Title": {
                    "type": "string"
                },
                "Type": {
                    "type": "string"
                },
                "UID": {
                    "type": "string"
                },
                "UpdatedAt": {
                    "type": "string"
                },
                "Year": {
                    "type": "integer"
                }
            }
        },
        "search.Face": {
            "type": "object",
            "properties": {
                "CollisionRadius": {
                    "type": "number"
                },
                "Collisions": {
                    "type": "integer"
                },
                "CreatedAt": {
                    "type": "string"
                },
                "FaceDist": {
                    "type": "number"
                },
                "FileUID": {
                    "type": "string"
                },
                "Hidden": {
                    "type": "boolean"
                },
                "ID": {
                    "type": "string"
                },
                "Invalid": {
                    "type": "boolean"
                },
                "MarkerUID": {
                    "type": "string"
                },
                "MatchedAt": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "Review": {
                    "type": "boolean"
                },
                "SampleRadius": {
                    "type": "number"
                },
                "Samples": {
                    "type": "integer"
                },
                "Score": {
                    "type": "integer"
                },
                "Size": {
                    "type": "integer"
                },
                "Src": {
                    "type": "string"
                },
                "SubjSrc": {
                    "type": "string"
                },
                "SubjUID": {
                    "type": "string"
                },
                "Thumb": {
                    "type": "string"
                },
                "UpdatedAt": {
                    "type": "string"
                }
            }
        },
        "search.GeoResult": {
            "type": "object",
            "properties": {
                "Description": {
                    "type": "string"
                },
                "Favorite": {
                    "type": "boolean"
                },
                "Hash": {
                    "type": "string"
                },
                "Height": {
                    "type": "integer"
                },
                "Lat": {
                    "type": "number"
                },
                "Lng": {
                    "type": "number"
                },
                "TakenAt": {
                    "type": "string"
                },
                "TakenAtLocal": {
                    "type": "string"
                },
                "Title": {
                    "type": "string"
                },
                "Type": {
                    "type": "string"
                },
                "UID": {
                    "type": "string"
                },
                "Width": {
                    "type": "integer"
                }
            }
        },
        "search.Label": {
            "type": "object",
            "properties": {
                "CreatedAt": {
                    "type": "string"
                },
                "CustomSlug": {
                    "type": "string"
                },
                "DeletedAt": {
                    "type": "string"
                },
                "Description": {
                    "type": "string"
                },
                "Favorite": {
                    "type": "boolean"
                },
                "ID": {
                    "type": "integer"
                },
                "Name": {
                    "type": "string"
                },
                "Notes": {
                    "type": "string"
                },
                "PhotoCount": {
                    "type": "integer"
                },
                "Priority": {
                    "type": "integer"
                },
                "Slug": {
                    "type": "string"
                },
                "Thumb": {
                    "type": "string"
                },
                "ThumbSrc": {
                    "type": "string"
                },
                "UID": {
                    "type": "string"
                },
                "UpdatedAt": {
                    "type": "string"
                }
            }
        },
        "search.Photo": {
            "type": "object",
            "properties": {
                "Altitude": {
                    "type": "integer"
                },
                "CameraID": {
                    "description": "Camera",
                    "type": "integer"
                },
                "CameraMake": {
                    "type": "string"
                },
                "CameraModel": {
                    "type": "string"
                },
                "CameraSerial": {
                    "type": "string"
                },
                "CameraSrc": {
                    "type": "string"
                },
                "CellAccuracy": {
                    "type": "integer"
                },
                "CellID": {
                    "description": "Cell",
                    "type": "string"
                },
                "CheckedAt": {
                    "type": "string"
                },
                "Color": {
                    "type": "integer"
                },
                "Country": {
                    "type": "string"
                },
                "CreatedAt": {
                    "type": "string"
                },
                "Day": {
                    "type": "integer"
                },
                "DeletedAt": {
                    "type": "string"
                },
                "Description": {
                    "type": "string"
                },
                "DocumentID": {
                    "type": "string"
                },
                "Duration": {
                    "$ref": "#/definitions/time.Duration"
                },
                "EditedAt": {
                    "type": "string"
                },
                "Exposure": {
                    "type": "string"
                },
                "FNumber": {
                    "type": "number"
                },
                "Faces": {
                    "type": "integer"
                },
                "Favorite": {
                    "type": "boolean"
                },
                "FileName": {
                    "type": "string"
                },
                "FileRoot": {
                    "type": "string"
                },
                "FileUID": {
                    "type": "string"
                },
                "Files": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.File"
                    }
                },
                "FocalLength": {
                    "type": "integer"
                },
                "Hash": {
                    "type": "string"
                },
                "Height": {
                    "type": "integer"
                },
                "ID": {
                    "type": "string"
                },
                "InstanceID": {
                    "type": "string"
                },
                "Iso": {
                    "type": "integer"
                },
                "Lat": {
                    "type": "number"
                },
                "LensID": {
                    "description": "Lens",
                    "type": "integer"
                },
                "LensMake": {
                    "type": "string"
                },
                "LensModel": {
                    "type": "string"
                },
                "Lng": {
                    "type": "number"
                },
                "Merged": {
                    "type": "boolean"
                },
                "Month": {
                    "type": "integer"
                },
                "Name": {
                    "type": "string"
                },
                "OriginalName": {
                    "type": "string"
                },
                "Panorama": {
                    "type": "boolean"
                },
                "Path": {
                    "type": "string"
                },
                "PlaceCity": {
                    "type": "string"
                },
                "PlaceCountry": {
                    "type": "string"
                },
                "PlaceID": {
                    "type": "string"
                },
                "PlaceLabel": {
                    "type": "string"
                },
                "PlaceSrc": {
                    "type": "string"
                },
                "PlaceState": {
                    "type": "string"
                },
                "Portrait": {
                    "type": "boolean"
                },
                "Private": {
                    "type": "boolean"
                },
                "Quality": {
                    "type": "integer"
                },
                "Resolution": {
                    "type": "integer"
                },
                "Scan": {
                    "type": "boolean"
                },
                "Stack": {
                    "type": "integer"
                },
                "TakenAt": {
                    "type": "string"
                },
                "TakenAtLocal": {
                    "type": "string"
                },
                "TakenSrc": {
                    "type": "string"
                },
                "TimeZone": {
                    "type": "string"
                },
                "Title": {
                    "type": "string"
                },
                "Type": {
                    "type": "string"
                },
                "TypeSrc": {
                    "type": "string"
                },
                "UID": {
                    "type": "string"
                },
                "UpdatedAt": {
                    "type": "string"
                },
                "Width": {
                    "type": "integer"
                },
                "Year": {
                    "type": "integer"
                }
            }
        },
        "search.Subject": {
            "type": "object",
            "properties": {
                "Alias": {
                    "type": "string"
                },
                "Excluded": {
                    "type": "boolean"
                },
                "Favorite": {
                    "type": "boolean"
                },
                "FileCount": {
                    "type": "integer"
                },
                "Hidden": {
                    "type": "boolean"
                },
                "MarkerSrc": {
                    "type": "string"
                },
                "MarkerUID": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "PhotoCount": {
                    "type": "integer"
                },
                "Private": {
                    "type": "boolean"
                },
                "Slug": {
                    "type": "string"
                },
                "Thumb": {
                    "type": "string"
                },
                "ThumbSrc": {
                    "type": "string"
                },
                "Type": {
                    "type": "string"
                },
                "UID": {
                    "type": "string"
                }
            }
        },
        "sql.NullTime": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string"
                },
                "valid": {
                    "description": "Valid is true if Time is not NULL",
                    "type": "boolean"
                }
            }
        },
        "textproto.MIMEHeader": {
            "type": "object",
            "additionalProperties": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            }
        },
        "time.Duration": {
            "type": "integer",
            "enum": [
                1,
                1000,
                1000000,
                1000000000,
                60000000000,
                3600000000000,
                1,
                1000,
                1000000,
                1000000000,
                60000000000,
                3600000000000,
                1,
                1000,
                1000000,
                1000000000,
                1,
                1000,
                1000000,
                1000000000,
                60000000000,
                3600000000000,
                1,
                1000,
                1000000,
                1000000000,
                60000000000,
                3600000000000
            ],
            "x-enum-varnames": [
                "Nanosecond",
                "Microsecond",
                "Millisecond",
                "Second",
                "Minute",
                "Hour",
                "Nanosecond",
                "Microsecond",
                "Millisecond",
                "Second",
                "Minute",
                "Hour",
                "Nanosecond",
                "Microsecond",
                "Millisecond",
                "Second",
                "Nanosecond",
                "Microsecond",
                "Millisecond",
                "Second",
                "Minute",
                "Hour",
                "Nanosecond",
                "Microsecond",
                "Millisecond",
                "Second",
                "Minute",
                "Hour"
            ]
        },
        "tls.ConnectionState": {
            "type": "object",
            "properties": {
                "cipherSuite": {
                    "description": "CipherSuite is the cipher suite negotiated for the connection (e.g.\nTLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256, TLS_AES_128_GCM_SHA256).",
                    "type": "integer"
                },
                "didResume": {
                    "description": "DidResume is true if this connection was successfully resumed from a\nprevious session with a session ticket or similar mechanism.",
                    "type": "boolean"
                },
                "handshakeComplete": {
                    "description": "HandshakeComplete is true if the handshake has concluded.",
                    "type": "boolean"
                },
                "negotiatedProtocol": {
                    "description": "NegotiatedProtocol is the application protocol negotiated with ALPN.",
                    "type": "string"
                },
                "negotiatedProtocolIsMutual": {
                    "description": "NegotiatedProtocolIsMutual used to indicate a mutual NPN negotiation.\n\nDeprecated: this value is always true.",
                    "type": "boolean"
                },
                "ocspresponse": {
                    "description": "OCSPResponse is a stapled Online Certificate Status Protocol (OCSP)\nresponse provided by the peer for the leaf certificate, if any.",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "peerCertificates": {
                    "description": "PeerCertificates are the parsed certificates sent by the peer, in the\norder in which they were sent. The first element is the leaf certificate\nthat the connection is verified against.\n\nOn the client side, it can't be empty. On the server side, it can be\nempty if Config.ClientAuth is not RequireAnyClientCert or\nRequireAndVerifyClientCert.\n\nPeerCertificates and its contents should not be modified.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/x509.Certificate"
                    }
                },
                "serverName": {
                    "description": "ServerName is the value of the Server Name Indication extension sent by\nthe client. It's available both on the server and on the client side.",
                    "type": "string"
                },
                "signedCertificateTimestamps": {
                    "description": "SignedCertificateTimestamps is a list of SCTs provided by the peer\nthrough the TLS handshake for the leaf certificate, if any.",
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "tlsunique": {
                    "description": "TLSUnique contains the \"tls-unique\" channel binding value (see RFC 5929,\nSection 3). This value will be nil for TLS 1.3 connections and for\nresumed connections that don't support Extended Master Secret (RFC 7627).",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "verifiedChains": {
                    "description": "VerifiedChains is a list of one or more chains where the first element is\nPeerCertificates[0] and the last element is from Config.RootCAs (on the\nclient side) or Config.ClientCAs (on the server side).\n\nOn the client side, it's set if Config.InsecureSkipVerify is false. On\nthe server side, it's set if Config.ClientAuth is VerifyClientCertIfGiven\n(and the peer provided a certificate) or RequireAndVerifyClientCert.\n\nVerifiedChains and its contents should not be modified.",
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/x509.Certificate"
                        }
                    }
                },
                "version": {
                    "description": "Version is the TLS version used by the connection (e.g. VersionTLS12).",
                    "type": "integer"
                }
            }
        },
        "url.URL": {
            "type": "object",
            "properties": {
                "forceQuery": {
                    "description": "append a query ('?') even if RawQuery is empty",
                    "type": "boolean"
                },
                "fragment": {
                    "description": "fragment for references, without '#'",
                    "type": "string"
                },
                "host": {
                    "description": "host or host:port (see Hostname and Port methods)",
                    "type": "string"
                },
                "omitHost": {
                    "description": "do not emit empty host (authority)",
                    "type": "boolean"
                },
                "opaque": {
                    "description": "encoded opaque data",
                    "type": "string"
                },
                "path": {
                    "description": "path (relative paths may omit leading slash)",
                    "type": "string"
                },
                "rawFragment": {
                    "description": "encoded fragment hint (see EscapedFragment method)",
                    "type": "string"
                },
                "rawPath": {
                    "description": "encoded path hint (see EscapedPath method)",
                    "type": "string"
                },
                "rawQuery": {
                    "description": "encoded query values, without '?'",
                    "type": "string"
                },
                "scheme": {
                    "type": "string"
                },
                "user": {
                    "description": "username and password information",
                    "allOf": [
                        {
                            "$ref": "#/definitions/url.Userinfo"
                        }
                    ]
                }
            }
        },
        "url.Userinfo": {
            "type": "object"
        },
        "url.Values": {
            "type": "object",
            "additionalProperties": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            }
        },
        "x509.Certificate": {
            "type": "object",
            "properties": {
                "authorityKeyId": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "basicConstraintsValid": {
                    "description": "BasicConstraintsValid indicates whether IsCA, MaxPathLen,\nand MaxPathLenZero are valid.",
                    "type": "boolean"
                },
                "crldistributionPoints": {
                    "description": "CRL Distribution Points",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "dnsnames": {
                    "description": "Subject Alternate Name values. (Note that these values may not be valid\nif invalid values were contained within a parsed certificate. For\nexample, an element of DNSNames may not be a valid DNS domain name.)",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "emailAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "excludedDNSDomains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "excludedEmailAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "excludedIPRanges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/net.IPNet"
                    }
                },
                "excludedURIDomains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "extKeyUsage": {
                    "description": "Sequence of extended key usages.",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "extensions": {
                    "description": "Extensions contains raw X.509 extensions. When parsing certificates,\nthis can be used to extract non-critical extensions that are not\nparsed by this package. When marshaling certificates, the Extensions\nfield is ignored, see ExtraExtensions.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pkix.Extension"
                    }
                },
                "extraExtensions": {
                    "description": "ExtraExtensions contains extensions to be copied, raw, into any\nmarshaled certificates. Values override any extensions that would\notherwise be produced based on the other fields. The ExtraExtensions\nfield is not populated when parsing certificates, see Extensions.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pkix.Extension"
                    }
                },
                "ipaddresses": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "isCA": {
                    "type": "boolean"
                },
                "issuer": {
                    "$ref": "#/definitions/pkix.Name"
                },
                "issuingCertificateURL": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "keyUsage": {
                    "type": "integer"
                },
                "maxPathLen": {
                    "description": "MaxPathLen and MaxPathLenZero indicate the presence and\nvalue of the BasicConstraints' \"pathLenConstraint\".\n\nWhen parsing a certificate, a positive non-zero MaxPathLen\nmeans that the field was specified, -1 means it was unset,\nand MaxPathLenZero being true mean that the field was\nexplicitly set to zero. The case of MaxPathLen==0 with MaxPathLenZero==false\nshould be treated equivalent to -1 (unset).\n\nWhen generating a certificate, an unset pathLenConstraint\ncan be requested with either MaxPathLen == -1 or using the\nzero value for both MaxPathLen and MaxPathLenZero.",
                    "type": "integer"
                },
                "maxPathLenZero": {
                    "description": "MaxPathLenZero indicates that BasicConstraintsValid==true\nand MaxPathLen==0 should be interpreted as an actual\nmaximum path length of zero. Otherwise, that combination is\ninterpreted as MaxPathLen not being set.",
                    "type": "boolean"
                },
                "notBefore": {
                    "description": "Validity bounds.",
                    "type": "string"
                },
                "ocspserver": {
                    "description": "RFC 5280, 4.2.2.1 (Authority Information Access)",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "permittedDNSDomains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "permittedDNSDomainsCritical": {
                    "description": "Name constraints",
                    "type": "boolean"
                },
                "permittedEmailAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "permittedIPRanges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/net.IPNet"
                    }
                },
                "permittedURIDomains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "policies": {
                    "description": "Policies contains all policy identifiers included in the certificate.\nIn Go 1.22, encoding/gob cannot handle and ignores this field.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/x509.OID"
                    }
                },
                "policyIdentifiers": {
                    "description": "PolicyIdentifiers contains asn1.ObjectIdentifiers, the components\nof which are limited to int32. If a certificate contains a policy which\ncannot be represented by asn1.ObjectIdentifier, it will not be included in\nPolicyIdentifiers, but will be present in Policies, which contains all parsed\npolicy OIDs.",
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "publicKey": {},
                "publicKeyAlgorithm": {
                    "type": "integer"
                },
                "raw": {
                    "description": "Complete ASN.1 DER content (certificate, signature algorithm and signature).",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "rawIssuer": {
                    "description": "DER encoded Issuer",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "rawSubject": {
                    "description": "DER encoded Subject",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "rawSubjectPublicKeyInfo": {
                    "description": "DER encoded SubjectPublicKeyInfo.",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "rawTBSCertificate": {
                    "description": "Certificate part of raw ASN.1 DER content.",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "serialNumber": {
                    "$ref": "#/definitions/big.Int"
                },
                "signature": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "signatureAlgorithm": {
                    "type": "integer"
                },
                "subject": {
                    "$ref": "#/definitions/pkix.Name"
                },
                "subjectKeyId": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "unhandledCriticalExtensions": {
                    "description": "UnhandledCriticalExtensions contains a list of extension IDs that\nwere not (fully) processed when parsing. Verify will fail if this\nslice is non-empty, unless verification is delegated to an OS\nlibrary which understands all the critical extensions.\n\nUsers can access these extensions using Extensions and can remove\nelements from this slice if they believe that they have been\nhandled.",
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "unknownExtKeyUsage": {
                    "description": "Encountered extended key usages unknown to this package.",
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "uris": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/url.URL"
                    }
                },
                "version": {
                    "type": "integer"
                }
            }
        },
        "x509.OID": {
            "type": "object"
        }
    },
    "externalDocs": {
        "description": "Learn more ›",
        "url": "https://docs.photoprism.app/developer-guide/api/"
    }
}